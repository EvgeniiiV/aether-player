#!/bin/bash
# Aether Player - –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m'

print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[OK]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[–í–ù–ò–ú–ê–ù–ò–ï]${NC} $1"
}

print_error() {
    echo -e "${RED}[–ü–†–û–ë–õ–ï–ú–ê]${NC} $1"
}

print_header() {
    echo -e "${PURPLE}"
    echo "=================================================="
    echo "üîç AETHER PLAYER - –ú–û–ù–ò–¢–û–†–ò–ù–ì –°–ò–°–¢–ï–ú–´"
    echo "=================================================="
    echo -e "${NC}"
}

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—á–µ—Ç–∞
WARNINGS=0
ERRORS=0
REPORT_FILE="/tmp/aether-monitor-$(date +%Y%m%d-%H%M%S).txt"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –æ—Ç—á–µ—Ç
write_report() {
    echo "$1" >> "$REPORT_FILE"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞
check_cpu_temperature() {
    print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞..."
    
    if command -v vcgencmd >/dev/null 2>&1; then
        TEMP=$(vcgencmd measure_temp | sed 's/temp=//' | sed 's/¬∞C//')
        TEMP_INT=${TEMP%.*}
        
        write_report "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ CPU: ${TEMP}¬∞C"
        
        if [ "$TEMP_INT" -gt 75 ]; then
            print_error "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${TEMP}¬∞C (>75¬∞C)"
            ((ERRORS++))
        elif [ "$TEMP_INT" -gt 65 ]; then
            print_warning "–í—ã—Å–æ–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${TEMP}¬∞C (>65¬∞C)"
            ((WARNINGS++))
        else
            print_success "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –Ω–æ—Ä–º–µ: ${TEMP}¬∞C"
        fi
    else
        print_warning "–ö–æ–º–∞–Ω–¥–∞ vcgencmd –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (–Ω–µ Raspberry Pi?)"
        write_report "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ CPU: –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∏—Å–∫–∞
check_disk_usage() {
    print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é —Ñ–∞–π–ª–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É
    ROOT_USAGE=$(df / | awk 'NR==2 {print $5}' | sed 's/%//')
    write_report "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –¥–∏—Å–∫–∞: ${ROOT_USAGE}%"
    
    if [ "$ROOT_USAGE" -gt 90 ]; then
        print_error "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –º–∞–ª–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ: ${ROOT_USAGE}%"
        ((ERRORS++))
    elif [ "$ROOT_USAGE" -gt 80 ]; then
        print_warning "–ú–∞–ª–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ: ${ROOT_USAGE}%"
        ((WARNINGS++))
    else
        print_success "–ú–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ –≤ –Ω–æ—Ä–º–µ: ${ROOT_USAGE}%"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–ø–∫—É –º–µ–¥–∏–∞
    MEDIA_PATH="/home/$USER/aether-player/media"
    if [ -d "$MEDIA_PATH" ]; then
        MEDIA_SIZE=$(du -sh "$MEDIA_PATH" 2>/dev/null | cut -f1 || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        write_report "–†–∞–∑–º–µ—Ä –º–µ–¥–∏–∞ –ø–∞–ø–∫–∏: $MEDIA_SIZE"
        print_status "–†–∞–∑–º–µ—Ä –º–µ–¥–∏–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏: $MEDIA_SIZE"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–º—è—Ç–∏
check_memory_usage() {
    print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏..."
    
    MEM_USAGE=$(free | awk 'NR==2{printf "%.1f", $3*100/$2}')
    MEM_USAGE_INT=${MEM_USAGE%.*}
    
    write_report "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: ${MEM_USAGE}%"
    
    if [ "$MEM_USAGE_INT" -gt 90 ]; then
        print_error "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –º–∞–ª–æ –ø–∞–º—è—Ç–∏: ${MEM_USAGE}%"
        ((ERRORS++))
    elif [ "$MEM_USAGE_INT" -gt 80 ]; then
        print_warning "–ú–∞–ª–æ –ø–∞–º—è—Ç–∏: ${MEM_USAGE}%"
        ((WARNINGS++))
    else
        print_success "–ü–∞–º—è—Ç—å –≤ –Ω–æ—Ä–º–µ: ${MEM_USAGE}%"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞ Aether Player
check_aether_service() {
    print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ Aether Player..."
    
    if systemctl is-active --quiet aether-player.service; then
        print_success "–°–µ—Ä–≤–∏—Å Aether Player –∑–∞–ø—É—â–µ–Ω"
        write_report "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞: –ó–ê–ü–£–©–ï–ù"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        LOCAL_IP=$(hostname -I | awk '{print $1}')
        if curl -s --connect-timeout 5 "http://$LOCAL_IP:5000" >/dev/null; then
            print_success "–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω"
            write_report "–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: –î–û–°–¢–£–ü–ï–ù"
        else
            print_error "–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!"
            write_report "–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: –ù–ï–î–û–°–¢–£–ü–ï–ù"
            ((ERRORS++))
        fi
    else
        print_error "–°–µ—Ä–≤–∏—Å Aether Player –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
        write_report "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞: –û–°–¢–ê–ù–û–í–õ–ï–ù"
        ((ERRORS++))
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É–¥–∏–æ —Å–∏—Å—Ç–µ–º—ã
check_audio_system() {
    print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É–¥–∏–æ —Å–∏—Å—Ç–µ–º—É..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É–¥–∏–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    if command -v aplay >/dev/null 2>&1; then
        AUDIO_DEVICES=$(aplay -l 2>/dev/null | grep -c "card" || echo "0")
        write_report "–ù–∞–π–¥–µ–Ω–æ –∞—É–¥–∏–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤: $AUDIO_DEVICES"
        
        if [ "$AUDIO_DEVICES" -eq 0 ]; then
            print_error "–ê—É–¥–∏–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!"
            ((ERRORS++))
        else
            print_success "–ù–∞–π–¥–µ–Ω–æ –∞—É–¥–∏–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤: $AUDIO_DEVICES"
        fi
    else
        print_warning "–ö–æ–º–∞–Ω–¥–∞ aplay –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
        write_report "–ê—É–¥–∏–æ —Å–∏—Å—Ç–µ–º–∞: –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º PulseAudio
    if command -v pulseaudio >/dev/null 2>&1; then
        if pgrep -x pulseaudio >/dev/null; then
            print_success "PulseAudio –∑–∞–ø—É—â–µ–Ω"
            write_report "PulseAudio: –ó–ê–ü–£–©–ï–ù"
        else
            print_warning "PulseAudio –Ω–µ –∑–∞–ø—É—â–µ–Ω"
            write_report "PulseAudio: –ù–ï –ó–ê–ü–£–©–ï–ù"
            ((WARNINGS++))
        fi
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
check_network() {
    print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç–µ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ..."
    
    # –ü–æ–ª—É—á–∞–µ–º IP –∞–¥—Ä–µ—Å
    LOCAL_IP=$(hostname -I | awk '{print $1}')
    if [ -n "$LOCAL_IP" ]; then
        print_success "IP –∞–¥—Ä–µ—Å: $LOCAL_IP"
        write_report "IP –∞–¥—Ä–µ—Å: $LOCAL_IP"
    else
        print_error "IP –∞–¥—Ä–µ—Å –Ω–µ –ø–æ–ª—É—á–µ–Ω!"
        write_report "IP –∞–¥—Ä–µ—Å: –ù–ï –ü–û–õ–£–ß–ï–ù"
        ((ERRORS++))
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    if ping -c 1 8.8.8.8 >/dev/null 2>&1; then
        print_success "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        write_report "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç: –î–û–°–¢–£–ü–ï–ù"
    else
        print_warning "–ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"
        write_report "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç: –ù–ï–î–û–°–¢–£–ü–ï–ù"
        ((WARNINGS++))
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏
check_logs() {
    print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –Ω–∞ –æ—à–∏–±–∫–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ systemd –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å
    ERROR_COUNT=$(journalctl -u aether-player.service --since "1 hour ago" --no-pager | grep -i error | wc -l)
    write_report "–û—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö –∑–∞ —á–∞—Å: $ERROR_COUNT"
    
    if [ "$ERROR_COUNT" -gt 10 ]; then
        print_error "–ú–Ω–æ–≥–æ –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö: $ERROR_COUNT –∑–∞ —á–∞—Å"
        ((ERRORS++))
    elif [ "$ERROR_COUNT" -gt 0 ]; then
        print_warning "–ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö: $ERROR_COUNT –∑–∞ —á–∞—Å"
        ((WARNINGS++))
    else
        print_success "–û—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω–µ—à–Ω–µ–≥–æ HDD (–µ—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω)
check_external_hdd() {
    print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–Ω–µ—à–Ω–∏–µ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª–∏..."
    
    HDD_MOUNTED=false
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ USB —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    USB_MOUNTS=$(mount | grep -c "/dev/sd" 2>/dev/null || echo "0")
    write_report "–ü–æ–¥–∫–ª—é—á–µ–Ω–æ USB –¥–∏—Å–∫–æ–≤: $USB_MOUNTS"
    
    if [ "$USB_MOUNTS" -gt 0 ]; then
        print_success "–ü–æ–¥–∫–ª—é—á–µ–Ω–æ USB –¥–∏—Å–∫–æ–≤: $USB_MOUNTS"
        HDD_MOUNTED=true
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–æ—á–∫–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        if [ -d "/mnt/music" ] && mountpoint -q "/mnt/music"; then
            HDD_USAGE=$(df /mnt/music | awk 'NR==2 {print $5}' | sed 's/%//')
            print_success "–ú–µ–¥–∏–∞ –¥–∏—Å–∫ —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: ${HDD_USAGE}%"
            write_report "–ú–µ–¥–∏–∞ –¥–∏—Å–∫: –°–ú–û–ù–¢–ò–†–û–í–ê–ù (${HDD_USAGE}%)"
        fi
    else
        print_warning "–í–Ω–µ—à–Ω–∏–µ USB –¥–∏—Å–∫–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã"
        write_report "USB –¥–∏—Å–∫–∏: –ù–ï –û–ë–ù–ê–†–£–ñ–ï–ù–´"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–≤–æ–¥–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
generate_summary() {
    echo >> "$REPORT_FILE"
    echo "=== –°–í–û–î–ö–ê ===" >> "$REPORT_FILE"
    echo "–î–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: $(date)" >> "$REPORT_FILE"
    echo "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: $WARNINGS" >> "$REPORT_FILE"
    echo "–û—à–∏–±–æ–∫: $ERRORS" >> "$REPORT_FILE"
    
    echo
    print_header
    echo -e "${BLUE}–î–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:${NC} $(date)"
    
    if [ "$ERRORS" -gt 0 ]; then
        echo -e "${RED}–°—Ç–∞—Ç—É—Å: –¢–†–ï–ë–£–ï–¢ –í–ù–ò–ú–ê–ù–ò–Ø${NC}"
        echo -e "${RED}–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º: $ERRORS${NC}"
    elif [ "$WARNINGS" -gt 0 ]; then
        echo -e "${YELLOW}–°—Ç–∞—Ç—É—Å: –ï–°–¢–¨ –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø${NC}"
        echo -e "${YELLOW}–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: $WARNINGS${NC}"
    else
        echo -e "${GREEN}–°—Ç–∞—Ç—É—Å: –í–°–ï –í –ü–û–†–Ø–î–ö–ï${NC}"
    fi
    
    echo
    print_status "–ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $REPORT_FILE"
    
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á–µ—Ç
    if [ "$1" != "--silent" ]; then
        echo
        read -p "–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç? (y/N): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            cat "$REPORT_FILE"
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–¥–ª—è –±—É–¥—É—â–µ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è)
send_notifications() {
    if [ "$ERRORS" -gt 0 ]; then
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É email, Telegram, etc.
        echo "–ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´: $ERRORS" > "/tmp/aether-alert.txt"
        echo "–¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ!" >> "/tmp/aether-alert.txt"
    fi
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    # –ï—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ —Å --silent, –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    if [ "$1" != "--silent" ]; then
        print_header
        print_status "–ù–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É —Å–∏—Å—Ç–µ–º—ã..."
        echo
    fi
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –æ—Ç—á–µ—Ç–∞
    echo "=== –û–¢–ß–ï–¢ –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê AETHER PLAYER ===" > "$REPORT_FILE"
    echo "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è: $(date)" >> "$REPORT_FILE"
    echo >> "$REPORT_FILE"
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
    check_cpu_temperature
    check_disk_usage
    check_memory_usage
    check_aether_service
    check_audio_system
    check_network
    check_logs
    check_external_hdd
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–≤–æ–¥–∫—É
    generate_summary "$1"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö
    send_notifications
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–¥ –æ—à–∏–±–∫–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ cron
    if [ "$ERRORS" -gt 0 ]; then
        exit 1
    elif [ "$WARNINGS" -gt 0 ]; then
        exit 2
    else
        exit 0
    fi
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
main "$@"
